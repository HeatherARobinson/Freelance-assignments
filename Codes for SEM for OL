#Creating an SEM to describe the relationship between manifest variables and latent umbrella constructs
#Using the Lavaan package

Tofu<-read.csv("Tofu2.csv")
attach(Tofu)

#To combine the 2 tofu datasets we have made some assumptions
#This is because Lavaan deletes an entire row if there is any missing data
#Texture and size are not given for flavored tofu so we have assumed a median texture (4) and size (2)
#There is no idencation of pack type for flavored tofu so I have omitted waterpack as a variable
#We assume none of the flavored tofu is produced offsite
#Flavor now has 13 levels, 13 being plain


library(lavaan)

#The variances across the variables need to be similar. We can scale them if they are not:
Tofu$season <- Tofu$season/10
Tofu$Texture <- Tofu$Texture/10
Tofu$Flavor <- as.character(Tofu$Flavor)
Tofu$week <- Tofu$week/100

#Each latent construct should contain at least 3 variables so that the latent variable can be estimated
#because the degrees of freedom are based on the variables, not on sample size.
#Do not construct a model that has 0 degrees of freedom

#Define the model:
# example: model<-'latent_variable =~manifest_variable1 + manifest_variable2 + manifest_variable3'

#So far seasonal looks good. All but week are over 0.9 for Std.all- standardised . Week is less relevant in predicting season.

tofu.model.a<-
'Seasonal =~major_holiday + other_holidays + week + season

Sales_area =~ Canada + SE + NE

Customer_preference =~ Texture + Size + Promotion + Flavor + Waterpack

Product_establishment =~ Temporary + New

Sales_Group =~ Private_Label + Club + Retail'

tofu.fit.a<-cfa(model=tofu.model.a, data=Tofu)

#This first model won't converge because at least 2 latent variables overlap and need combining (matrix is not positive-definite)
#There are two few degrees of freedom to have latent constucts consisting of fewer than 3 variables-
#Size is now with Sales group in a variable called Presentation- because large sizes were only for retail and this corrected an overlap
#of what was being measured in Customer preference and Sales group.
#Shipping variables are now grouped with Sales area due to the correlations between Friday shipping and other site manufacture and distribution area
#Based on a 1 factor model of season I have dropped week as there is too much overlap with the other variables


tofu.model.b<-'Seasonal =~major_holiday + other_holidays + season

Customer_preference =~ Texture + Flavor + Promotion + Temporary + New

Presentation =~Private_Label + Club + Retail + Size

Distribution =~Canada + SE + NE + Friday_Shipping + Other_Site'

tofu.fit.b<-cfa(model=tofu.model.b, data=Tofu)

summary(tofu.fit.b, standardized=TRUE, fit.measures=TRUE)

#A solution has still "not been found" 
#The summary shows negative variance from private label so this needs adjusting
var(Tofu$Private_Label)

tofu.model.c<-'Seasonal =~major_holiday + other_holidays + season
Sales_group =~Private_Label + a*Club + a*Retail
Customer_preference=~Texture + a*Flavor + a*Size + a*Promotion
Private_Label~~0.07737609*Private_Label
Distribution =~Canada + a*SE + a*NE + a*Friday_Shipping + a*Other_Site'

tofu.fit.c<-cfa(model=tofu.model.c, data=Tofu)
summary(tofu.fit.c, standardized=TRUE, fit.measures=TRUE)

modificationindices(tofu.fit.c, sort = TRUE)

tofu.model.d<-'Seasonal =~major_holiday + a*other_holidays + a*season
Sales_group =~Private_Label + a*Club + a*Retail
Customer_preference=~Texture + a*Flavor + a*Size + a*Promotion
Private_Label~~0.07737609*Private_Label
Distribution =~Canada + a*SE + a*NE + a*Friday_Shipping + a*Other_Site'

Club ~~ NE
SE ~~ Other_Site'

tofu.fit.d<-cfa(model=tofu.model.d, data=Tofu)
summary(tofu.fit.d, standardized=TRUE, fit.measures=TRUE)






Private_Label~~0.07737609*Private_Label
SE~~0.2498286*SE
season ~~0.01264615*season
Retail~~0.07737609*Retail
major_holiday~~0.1116005*major_holiday'

tofu.fit.d<-cfa(model=tofu.model.d, data=Tofu)
summary(tofu.fit.d, standardized=TRUE, fit.measures=TRUE)






week~~0.01998828*week
SE~~0.2498286*SE
season~~ 0.01264615*season


tofu.fit.a<-cfa(model=tofu.model.a, data=Tofu)
summary(tofu.fit.a, standardized=TRUE, fit.measures=TRUE)







other_holidays~~0.165*other_holidays

NE ~~ New
SE ~~ New
NE ~~ Temporary
SE ~~ Temporary
Customer_preference =~ Canada
Customer_preference =~ SE'

anova(tofu.model1,tofu.model2)- confirm any additions with ANOVA.

#In the model code, #~ shows that a manifest variable is predicting a latent variable. ~~ shows a correlation between variables.

tofu.fit<-cfa(model=tofu.model, data=Tofu)
summary(tofu.fit, standardized=TRUE, fit.measures=TRUE)

#POSSIBLE ERRORS- "not positive definite"- the wrong classes have been specified. 2 may need to be merged. 1 variable may be a combination of others.
#Sales group resamples another latent class so needs to be merged. Won't merge with area

#If you have negative variances in std.all, set the variances manually in the model.
#e.g. other_holidays~~0.165*other_holidays






#The model can either be scaled by setting the variance of the latent variable to 1, and dividing this between the manifest variables
#OR we can set the variance of one of the manifest variables to 1 (more commonly used approach). This is the Lavaan default.

#Now fit the model (run a factor analysis to check how well the manifest variables explain the latent variable):

#Interpreting: Different manifest variables have different loadings on the latent variables.
#Std.all in the output shows these loadings. Close to 1 shows a strong relationship to the latent variable.
#0.3 is typically considered an acceptable loading.
#CFI and TLI should be between 0.9 and 1 to show that the model fits the data

#VISUALISATION
library(semPlot)


