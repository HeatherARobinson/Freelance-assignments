Creating an SEM to describe the relationship between manifest variables and latent umbrella constructs
#Using the Lavaan package
#install.packages("ade4")      # PCA computation
#install.packages("lavaan") #SEM

Tofu<-read.csv("Tofu2.csv")
attach(Tofu)

#To combine the 2 tofu datasets we have made some assumptions
#This is because Lavaan deletes an entire row if there is any missing data
#Texture and size are not given for flavored tofu so we have assumed a median texture (4) and size (2)
#There is no idencation of pack type for flavored tofu so I have omitted waterpack as a variable
#We assume none of the flavored tofu is produced offsite
#Flavor now has 13 levels, 13 being plain

###########################################################################################################################
#Before running the SEM, run a preliminary PCA to guide model specification
#We are using the package ade4 because it has functionality for differentiating categorical and continuous variables.

library(ade4)
Tofu.x<-Tofu[,c(3:7,9:22)]
Tofu.x$Major_hol<-as.factor(Tofu.x$Major_hol)
Tofu.x$Other_hol<-as.factor(Tofu.x$Other_hol)
Tofu.x$Other_Site<-as.factor(Tofu.x$Other_Site)
Tofu.x$Flavor<-as.factor(Tofu.x$Flavor)
Tofu.x$Promo<-as.factor(Tofu.x$Promo)
Tofu.x$Friday_Shipping<-as.factor(Tofu.x$Friday_Shipping)
Tofu.x$Private_Label<-as.factor(Tofu.x$Private_Label)
Tofu.x$Club<-as.factor(Tofu.x$Club)
Tofu.x$Retail<-as.factor(Tofu.x$Retail)
Tofu.x$New<-as.factor(Tofu.x$New)
Tofu.x$Temp<-as.factor(Tofu.x$Temp)
Tofu.x$Flavor<-as.factor(Tofu.x$Flavor)
Tofu.x$Canada<-as.factor(Tofu.x$Canada)
Tofu.x$SE<-as.factor(Tofu.x$SE)
Tofu.x$NE<-as.factor(Tofu.x$NE)
Tofu.x$Sales<-as.numeric(Tofu.x$Sales)

dd1 <- dudi.mix(Tofu.x, add.square=FALSE,scannf = FALSE,nf=)
dd1$eig #There are 14 principal components suggested by model if we use a threshold of an Eigen value of 1, suggesting only six are grouped.
scatter(dd1,scannf=TRUE,clab.row=0,clab.col=0.7)

screeplot(dd1, npcs = length(dd1$eig), 
type = c("barplot", "lines"), main = "", col = c(rep("black", 11),
rep("grey", 17)))

scatter(dd1$l1,xax = 1, yax = 2, clab.row = 0.75, clab.col = 1,posieig="none")

plot(dd1$li,color="royalblue")

################################################################################################################################
library(lavaan)
Tofu<-read.csv("Tofu2.csv")
attach(Tofu)

#The variances across the variables need to be similar. We can scale them if they are not:
varTable(Tofu)
Tofu$Sales<-as.numeric(Tofu$Sales)/1000
Tofu$Week <- Tofu$Week/100
Tofu$Texture <- Tofu$Texture/10
Tofu$Flavor <- as.numeric(Tofu$Flavor)/10
Tofu$Season <- as.numeric(Tofu$Season)/10
varTable(Tofu)


#Each latent construct should contain at least 3 variables so that the latent variable can be estimated
#because the degrees of freedom are based on the variables, not on sample size.
#Do not construct a model that has 0 degrees of freedom

#Define the model:
# example: model<-'latent_variable =~manifest_variable1 + manifest_variable2 + manifest_variable3'

#So far seasonal looks good. All but week are over 0.9 for Std.all- standardised . Week is less relevant in predicting season.

tofu.model.a<-
'Seasonal =~Major_hol + Other_hol + Week + Season
Sales_area =~ Canada + SE + NE
Customer_preference =~ Texture + Size + Promo + Flavor
Product_establishment =~ Temp + New
Sales_Group =~ Private_Label + Club + Retail
Sales~ Seasonal+Sales_area+Customer_preference+Product_establishment+Sales_Group'

tofu.fit.a<-sem(model=tofu.model.a, data=Tofu)

#This first model won't converge because at least 2 latent variables overlap and need combining (matrix is not positive-definite)
#There are two few degrees of freedom to have latent constucts consisting of fewer than 3 variables-
#Combine size with Sales group in a variable called Presentation- because large sizes were only for retail and this corrected an overlap
#of what was being measured in Customer preference and Sales group.
#Shipping variables are now grouped with Sales area due to the correlations between Friday shipping and other site manufacture and distribution area
#Based on a 1 factor model of season I have dropped week as there is too much overlap with the other variables


tofu.model.b<-'Seasonal =~Major_hol + Other_hol + Season
Customer_preference =~ Texture + Flavor + Promo + Temp + New
Presentation =~Private_Label + Club + Retail + Size
Distribution =~Canada + SE + NE + Friday_Shipping + Other_Site
Sales~ Seasonal+Customer_preference+Presentation+Distribution'

tofu.fit.b<-sem(model=tofu.model.b, data=Tofu)

#Some latent constructs still overlap- try rearranging some of the variables

tofu.model.c<-'Seasonal =~Major_hol + a*Other_hol + a*Season
Customer_preference=~Texture + a*Flavor + a*Size
Type=~New +a*Promo + a*Temp
Distribution =~Canada + a*SE + a*NE + a*Friday_Shipping +a*Other_Site
Sales~ Seasonal+Customer_preference+Type+Distribution'

tofu.fit.c<-sem(model=tofu.model.c, data=Tofu)
summary(tofu.fit.c, standardized=TRUE, fit.measures=TRUE)


#The model will converge without either sales group or size in the same model
#but not with both as size closely reflects retail, club and private label.
#CFI is very low- the model fits poorly
#Try including retail with size etc
#Combine sales group with customer preference to allow sufficient dfs

tofu.model.d<-'Seasonal =~Major_hol + Other_hol + Season
Customer_preference=~Texture + a*Flavor + a*Size + a*Retail + a*Private_Label + a*Club
Type=~New +a*Promo + a*Temp
Distribution =~Canada + SE + NE + Friday_Shipping +Other_Site
Sales~ Seasonal+Customer_preference+Type+Distribution'
tofu.fit.d<-sem(model=tofu.model.d, data=Tofu)

summary(tofu.fit.d, standardized=TRUE, fit.measures=TRUE)

#Also very poor fit (CFI<0.1), with some positive definitive issues implying we need fewer latent constructs
#try dropping Club, which is not very informative
#Distribution may be better fitted if separated out again

#I have confirmed the following fit well as one factor models before combining but there are still issues:
#friday shipping is removed as it only applies to SE
#Private label and club cannot be included with the other variables as they have so little variation.
#Try adding size back with with Retail and comparing back to model C

tofu.model.f<-'Seasonal =~Major_hol + Other_hol + Season
Type=~Size +Retail+Promo + Temp + New+ Texture+Flavor
Distribution =~Canada + SE + NE
Sales~Seasonal+Type+Distribution'

tofu.fit.f<-sem(model=tofu.model.f, data=Tofu)
summary(tofu.fit.f, standardized=TRUE, fit.measures=TRUE)

#Now CFI is up to 0.485.
#There is a negative variance for Flavor which needs addressing 
#Size and retail resample each other- dropping retail improves the model:

tofu.model.g<-'Seasonal =~Major_hol + Other_hol + Season
Type=~Size+Promo + Temp + New+ Texture+Flavor
Distribution =~Canada + SE + NE
Sales~Seasonal+Type+Distribution
New~~NE
Canada~~Sales'

tofu.fit.g<-sem(model=tofu.model.g, data=Tofu)
summary(tofu.fit.g, standardized=TRUE, fit.measures=TRUE)

modificationindices(tofu.fit.g,sort=TRUE)
sink(file="TofuSEMOutputs.txt") 
summary(tofu.fit.g,standardize=TRUE,fit.measures=TRUE)
sink(NULL) 

########################################################
#Compare two fitted values
fitmeasures(tofu.fit.c,c("aic","ecvi"))
fitmeasures(tofu.fit.d,c("aic","ecvi"))

anova(tofu.model1,tofu.model2)- #You can use this code to compare any 2 model fits with ANOVA.

#In the model code, #~ shows that a manifest variable is predicting a latent variable. ~~ shows a correlation between variables.

#POSSIBLE ERRORS- "not positive definite"- the wrong classes have been specified. 2 may need to be merged. 1 variable may be a combination of others.

#If you have negative variances in std.all, set the variances manually in the model.
#e.g. other_holidays~~0.165*other_holidays


#The model can either be scaled by setting the variance of the latent variable to 1, and dividing this between the manifest variables
#OR we can set the variance of one of the manifest variables to 1 (more commonly used approach). This is the Lavaan default.

#Interpreting: Different manifest variables have different loadings on the latent variables.
#Std.all in the output shows these loadings. Close to 1 shows a strong relationship to the latent variable.
#0.3 is typically considered an acceptable loading.
#CFI and TLI should be between 0.9 and 1 to show that the model fits the data well
#Our CFI is 0.887 which show the model is a good fit as it is close to 0.9

sink(file="TofuSEMOutputs.txt") 
summary(tofu.fit.g,standardize=TRUE,fit.measures=TRUE)
sink(NULL) 
