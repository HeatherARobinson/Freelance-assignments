#Creating an SEM to describe the relationship between manifest variables and latent umbrella constructs

#Using the Lavaan package
Milk<-read.csv("Soymilk.csv")
attach(Milk)

###########################################################################################################################
#Before running the SEM, run a preliminary PCA to guide model specification
#We are using the package ade4 because it has functionality for differentiating categorical and continuous variables.
library(ade4)
Milk.x<-Milk[,c(3:14)]
Milk.x$Major_hol<-as.factor(Milk.x$Major_hol)
Milk.x$Sales<-as.numeric(Milk.x$Sales)
Milk.x$Other_hol<-as.factor(Milk.x$Other_hol)
Milk.x$Flavor<-as.factor(Milk.x$Flavor)
Milk.x$Promo<-as.factor(Milk.x$Promo)
Milk.x$Friday_Shipping<-as.factor(Milk.x$Friday_Shipping)
Milk.x$Creamer<-as.factor(Milk.x$Creamer)

ddr1 <- dudi.mix(Milk.x, add.square=FALSE,scannf = FALSE,nf=2)
ddr1$eig #There are 6 principal components suggested by the model if we use a threshold of an Eigen value of 1.
scatter(ddr1,scannf=FALSE,clab.row=0,clab.col=0.7)
screeplot(ddr1, npcs = length(ddr1$eig), type = c("barplot"), main= "",
    col = c(rep("black", 6),rep("grey", 6))) #Plots eigen values in a scree plot
plot(ddr1$l1,col="royalblue")

write.csv(ddr1$eig, file = "MilkEigenvalues.csv")

sink(file="MilkComponentCorrelations.txt") 
ddr1$co
sink(NULL) 

################################################################################################################################

library(lavaan)

Milk<-read.csv("Soymilk.csv")
attach(Milk)
#The variances across the variables need to be similar. We can scale them if they are not:
varTable(Milk)

Milk$Sales<-as.numeric(Milk$Sales)/100
Milk$Week_year<- Milk$Week_year/10
Milk$Flavor <- as.numeric(Milk$Flavor)
Milk$Promo<- as.numeric(Milk$Promo)
Milk$Temp<- as.numeric(Milk$Temp)*10
Milk$Private_Label<- as.numeric(Milk$Private_Label)
Milk$Friday_Shipping<- as.numeric(Milk$Friday_Shipping)
Milk$Major_hol<- as.numeric(Milk$Major_hol)
Milk$Other_hol<- as.numeric(Milk$Other_hol)
varTable(Milk)

#Each latent construct should contain at least 3 variables so that the latent variable can be estimated
#because the degrees of freedom are based on the variables, not on sample size.
#Do not construct a model that has 0 degrees of freedom
#Define the model:

# example: model<-'latent_variable =~manifest_variable1 + manifest_variable2 + manifest_variable3'

Milk.model.a<-'Seasonal =~Major_hol + Other_hol + Week_year + Week_month + Season
Customer_preference =~ Promo + Flavor + Creamer + Temp
Sales~ Seasonal+Customer_preference+Private_Label+Friday_Shipping'

Milk.fit.a<-sem(model=Milk.model.a, data=Milk)

#This first model won't converge because the latent variables overlap (matrix is not positive-definite)

Milk.model.b<-'Seasonal =~Major_hol + Other_hol + Week_year + Week_month + Season + Temp
Customer_preference =~ Promo + Flavor + Creamer
Sales~ Seasonal+Customer_preference+Private_Label+Friday_Shipping'

Milk.fit.b<-sem(model=Milk.model.b, data=Milk)

Milk.model.c<-'Seasonal =~Major_hol + Other_hol + Week_year + Week_month + Season
Customer_preference =~ Flavor + Temp + Private_Label
Sales~ Seasonal+Customer_preference+Friday_Shipping + Creamer'

Milk.fit.c<-sem(model=Milk.model.c, data=Milk)

Milk.model.d<-'Seasonal =~Major_hol + Other_hol + Week_year + Week_month + Season
Customer_preference =~ Flavor +  Private_Label
Sales~ Seasonal+Customer_preference+Friday_Shipping + Creamer + Temp'

Milk.fit.d<-sem(model=Milk.model.d, data=Milk)

Milk.model.e<-'Seasonal =~Major_hol + Other_hol + Week_year + Week_month + Season
Sales~ Seasonal+Friday_Shipping + Creamer + Temp + Private_Label + Flavor'
Milk.fit.e<-sem(model=Milk.model.e, data=Milk)

#Still issues- remove one variable as it resamples another

Milk.model.e<-'Seasonal =~Major_hol + Other_hol + Week_year + Week_month + Season
Sales~ Seasonal+Friday_Shipping + Creamer + Temp + Flavor'
Milk.fit.e<-sem(model=Milk.model.e, data=Milk)

#Removing private label solves the issue- go back to the original model minus private label and refine again

Milk.model.f<-'Seasonal =~Major_hol + Other_hol + Week_year + Week_month + Season
Customer_preference =~ Promo + Flavor + Creamer + Temp
Sales~ Seasonal+Customer_preference+Friday_Shipping'

Milk.fit.f<-sem(model=Milk.model.f, data=Milk)
summary(Milk.fit.f,standardize=TRUE,fit.measures=TRUE)

#CFI at 0.604
#Try removing season

Milk.model.g<-'Seasonal =~Major_hol + Other_hol + Week_year + Week_month
Customer_preference =~ Promo + Flavor + Temp + Creamer
Sales~ Seasonal+Customer_preference+Friday_Shipping'

Milk.fit.g<-sem(model=Milk.model.g, data=Milk)
summary(Milk.fit.g,standardize=TRUE,fit.measures=TRUE)

Milk.model.h<-'Seasonal =~Major_hol + Other_hol + Week_year +Week_month
Customer_preference =~ Promo + Flavor + Temp + Creamer
Sales~ Seasonal+Customer_preference+Friday_Shipping'

Milk.fit.h<-sem(model=Milk.model.h, data=Milk)
summary(Milk.fit.h,standardize=TRUE,fit.measures=TRUE)

#Try collapsing customer preference

Milk.model.i<-'Seasonal =~Major_hol + Other_hol + Week_year + Week_month
Sales~ Seasonal+Friday_Shipping+ + Promo + Flavor + Temp + Creamer'

Milk.fit.i<-sem(model=Milk.model.i, data=Milk)
summary(Milk.fit.i,standardize=TRUE,fit.measures=TRUE)
#CFI=0.891

modindices(Milk.fit.i,sort=TRUE)

Milk.model.j<-'Seasonal =~Major_hol + Other_hol + Week_year + Week_month
Sales~ Seasonal+Friday_Shipping+ + Promo + Flavor + Temp + Creamer
Seasonal~Temp'

Milk.fit.j<-sem(model=Milk.model.j, data=Milk)
summary(Milk.fit.j,standardize=TRUE,fit.measures=TRUE)
#CFI=0.943

sink(file="MilkSEMOutputs.txt") 
summary(Milk.fit.j,standardize=TRUE,fit.measures=TRUE)
sink(NULL) 
