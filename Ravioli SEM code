#Creating an SEM to describe the relationship between manifest variables and latent umbrella constructs
#Using the Lavaan package

Ravioli<-read.csv("Ravioli.csv")
attach(Ravioli)
#install.packages("ade4")      # PCA computation
#install.packages("lavaan") #SEM


###########################################################################################################################

#Before running the SEM, run a preliminary PCA to guide model specification

#We are using the package ade4 because it has functionality for differentiating categorical and continuous variables.

library(ade4)

Rav.x<-Ravioli[,c(3:17)]
Rav.x$Major_hol<-as.factor(Rav.x$Major_hol)
Rav.x$Other_hol<-as.factor(Rav.x$Other_hol)
Rav.x$Flavor<-as.factor(Rav.x$Flavor)
Rav.x$Promo<-as.factor(Rav.x$Promo)
Rav.x$Friday_Shipping<-as.factor(Rav.x$Friday_Shipping)
Rav.x$Private_Label<-as.factor(Rav.x$Private_Label)
Rav.x$Club<-as.factor(Rav.x$Club)
Rav.x$Retail<-as.factor(Rav.x$Retail)
Rav.x$New<-as.factor(Rav.x$New)
Rav.x$Temp<-as.factor(Rav.x$Temp)
Rav.x$Region<-as.factor(Rav.x$Region)
Rav.x$Sales<-as.numeric(Rav.x$Sales)

ddr1 <- dudi.mix(Rav.x, add.square=FALSE,scannf = FALSE,nf=2, grid=FALSE)

ddr1$eig #There are 11 principal components suggested by the model if we use a threshold of an Eigen value of 1, suggesting only 2 are grouped.
screeplot(ddr1, npcs = length(ddr1$eig), 
type = c("barplot", "lines"), main = "", col = c(rep("black", 11),
rep("grey", 12)))

library(FactoClass)
scatter.dudi(ddr1$l1,xax = 1, yax = 2, clab.row = 0.75, clab.col = 1,posieig="none")



write.csv(ddr1$eig, file = "RavioliEigenvalues.csv")
################################################################################################################################

library(lavaan)
Rav<-read.csv("Ravioli.csv")
attach(Rav)

#The variances across the variables need to be similar. We can scale them if they are not:

varTable(Rav)
Rav$Sales<-as.numeric(Rav$Sales)/1000
Rav$week_year<- Rav$week_year/100 
Rav$Flavor <- as.numeric(Rav$Flavor)/10
Rav$Region <- as.numeric(Rav$Region)/10
varTable(Rav)

#Each latent construct should contain at least 3 variables so that the latent variable can be estimated
#because the degrees of freedom are based on the variables, not on sample size.
#Do not construct a model that has 0 degrees of freedom

#Define the model:
# example: model<-'latent_variable =~manifest_variable1 + manifest_variable2 + manifest_variable3'

Rav.model.a<-'Seasonal =~Major_hol + Other_hol + week_year + week_month + Season
Sales_area =~ Region + Friday_Shipping + Retail + Club + Private_Label
Customer_preference =~ Promo + Flavor
Product_establishment =~ Temp + New
Sales~ Seasonal+Sales_area+Customer_preference+Product_establishment'

Rav.fit.a<-sem(model=Rav.model.a, data=Rav)

#This first model won't converge because at least 2 latent variables overlap and need combining (matrix is not positive-definite)

#There are two few degrees of freedom to have latent constucts consisting of fewer than 3 variables-

#Combine product establishment with customer preference

Rav.model.b<-'Seasonal =~Major_hol + Other_hol + week_year + week_month + Season
Sales_area =~ Region + Friday_Shipping + Retail + Club + Private_Label
Customer_preference =~ Promo + Flavor + Temp + New
Sales~ Seasonal+Sales_area+Customer_preference'

Rav.fit.b<-sem(model=Rav.model.b, data=Rav)

#Still an issue with positive definite. 
#Try combining seasonal with sales group

Rav.model.d<-'Positioning =~Major_hol + Other_hol + week_year + week_month + Season 
Sales=~ Region + Friday_Shipping+promo+Customer_preference + Flavor'
Rav.fit.d<-sem(model=Rav.model.d, data=Rav)
#Still overlap- try moving some variables

Rav.model.e<-'Sales_area =~ Region + Friday_Shipping + Retail + Club + Private_Label
Customer_preference =~ Promo + Flavor + Temp + New
Sales~Sales_area+Customer_preference + Friday_Shipping'
Rav.fit.e<-sem(model=Rav.model.e, data=Rav)
summary(Rav.fit.e, standardized=TRUE, fit.measures=TRUE)
#There is no longer a positive definitive error
#Promo and new should not be with temp and flavor


Rav.model.f<-'Sales_area =~ Region + Friday_Shipping + Retail + Club + Private_Label
Sales~Sales_area + Temp +New + Promo + Flavor'
Rav.fit.f<-sem(model=Rav.model.f, data=Rav)
summary(Rav.fit.f, standardized=TRUE, fit.measures=TRUE)
#Retail and club have zero variance

Rav.model.g<-'Sales_area =~ Region + Friday_Shipping + Private_Label
Sales~Sales_area + Temp +New + Promo + Flavor'
Rav.fit.g<-sem(model=Rav.model.g, data=Rav)
summary(Rav.fit.g, standardized=TRUE, fit.measures=TRUE)
#Converges with low CFI (<0.3)
modindices(Rav.fit.g)

Rav.model.h<-'Sales_area =~ Region + Friday_Shipping + Private_Label
Sales~Sales_area + Temp +New + Promo + Flavor
Sales_area~Flavor'
Rav.fit.h<-sem(model=Rav.model.h, data=Rav)
summary(Rav.fit.h, standardized=TRUE, fit.measures=TRUE)
#Converges with low CFI (<0.5), Region now has neg. variance

Rav.model.i<-'Sales~Temp +New + Promo + Flavor + Region + Friday_Shipping + Private_Label+Flavor'
Rav.fit.i<-sem(model=Rav.model.i, data=Rav)
summary(Rav.fit.i, standardized=TRUE, fit.measures=TRUE)
#Converges, preferable model to latent construct model.

sink(file="RavioliSEMOutputs.txt") 
summary(Rav.fit.i,standardize=TRUE,fit.measures=TRUE)
sink(NULL) 
